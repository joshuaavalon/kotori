dist: xenial
language: python
python: 3.7
stages:
  - test
  - deploy
jobs:
  include:
    - stage: test
      name: flake8
      install:
        - travis_retry pip install -r requirements.txt
        - travis_retry pip install -U flake8
      script:
        - flake8 kotori
        - flake8 run.py
    - stage: test
      name: pylint
      before_install:
        - deactivate
        - /opt/python/3.7.1/bin/python -m venv ~/venv
        - source ~/venv/bin/activate
      install:
        - travis_retry pip install -r requirements.txt
        - travis_retry pip install -U pylint
      script:
        - pylint kotori
        - pylint run.py
    - stage: test
      name: pytest
      install:
        - travis_retry pip install -r requirements.txt
        - travis_retry pip install -U pytest pytest-cov
      before_script:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
      script:
        - pytest --cov kotori --cov-report xml --cov-report term tests
      after_script:
        - ./cc-test-reporter after-build -t coverage.py --exit-code $TRAVIS_TEST_RESULT
    - stage: deploy
      name: mkdocs
      dist: trusty
      python: 3.6.7
      install:
        - travis_retry pip install -U mkdocs mkdocs-material
      script:
        - mkdocs build --clean --strict
      deploy:
        provider: pages
        skip-cleanup: true
        keep-history: true
        github-token: $GITHUB_TOKEN
        local-dir: site
        on:
          branch: master
    - stage: deploy
      name: docker
      script:
        - docker build --tag "${DOCKER_IMAGE}:latest" .
      before_deploy:
        - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
        - if [ -n "$TRAVIS_TAG" ]; then docker tag "${DOCKER_IMAGE}:latest" "${DOCKER_IMAGE}:${$TRAVIS_TAG}"; fi
      deploy:
        provider: script
        script: docker push "${DOCKER_IMAGE}:latest" && if [ -n "$TRAVIS_TAG" ]; then docker push "${DOCKER_IMAGE}:${TRAVIS_TAG}"; fi
        on:
          branch: master

